---
# vcms role tasks


- name: Required APT packages installed
  apt: pkg={{ item }}
  with_items:
    - curl
    - git
    - htop
    - imagemagick
    - libjpeg-dev
    - libyaml-dev
    - memcached
    - python-dev
    - python-memcache
    - python-virtualenv
    - python-pip
    - python3-pip
    - supervisor
    - vnstat
    - wget

- name: vcms log directory present
  file: path=/var/log/vcms state=directory owner=www-data mode=0755 follow=True

- name: External mounts present
  mount: name={{ item.path }} src={{ item.src }} fstype={{ item.type }} opts={{ item.opts }} state=present
  with_items: "{{ mounts }}"

- name: Storages directories present
  file: path={{ item[0].path }}/{{ item[1].name }} state=directory owner=www-data mode=0755 follow=True
  tags: ['storage']
  with_nested:
    - "{{ storage_dirs }}"
    - "{{ vcms_apps }}"

# App server
- name: latest you-get installed
  command: pip3 install --upgrade you-get creates="/usr/local/bin/you-get"
  tags: ['install', 'pip']

- name: pip at latest version
  pip: name=pip state=latest
  tags: ['pip']

- name: vcms's Python requirements at their latest version
  pip: requirements=/vagrant/vcms/vcms/requirements.txt state=latest
  tags: ['pip']

- name: vcms databases created
  mysql_db: name={{ item.name }} login_user=root login_password=pass state=present
  register: database
  tags: ['python', 'database']
  with_items: "{{ vcms_apps }}"

- name: generate vcms Django settings
  template: src=../vcms/vcms/settings.py.j2 dest=/vagrant/vcms/vcms/settings_{{item.name }}.py
  tags: ['settings']
  with_items: "{{ vcms_apps }}"

- name: vcms databases migrated
  django_manage: command=migrate app_path=/vagrant/vcms settings=vcms.settings_{{ item.name }}
  tags: ['python', 'database', 'django']
  with_items: "{{ vcms_apps }}"

- name: vcms Iniial users created
  django_manage: command="createsuperuser --noinput --username=admin --email=admin@example.com" app_path=/vagrant/vcms settings=vcms.settings_{{ item.name }}
  tags: ['database', 'django']
  when: database.changed
  with_items: "{{ vcms_apps }}"

# - name: vcms initial fixtures loaded if database changed
#   django_manage: command=loaddata app_path=/vagrant/video_site fixtures='' settings=vcms.settings_{{ item.name }}
#   when: database.changed
#   with_items: {{ vcms_apps }}

- name: Supervisor frontend configuration
  template: src=etc/supervisor-lajornadavideos.conf.j2 dest=/etc/supervisor/conf.d/lajornadavideos.conf
  tags: ['supervisor', 'frontend']
  register: supervisor
  notify:
    - restart supervisor

- name: Supervisor vcms configuration
  template: src=etc/supervisor-vcms.conf.j2 dest=/etc/supervisor/conf.d/vcms_{{ item.name }}.conf
  with_items: "{{ vcms_apps }}"
  tags: ['supervisor', 'backend']
  register: supervisor
  notify:
    - restart supervisor

- name: Supervisor restarted
  service: name=supervisor state=restarted
  tags: ['supervisor', 'backend']
  when: supervisor.changed

- name: Supervisor programs present
  command: supervisorctl reread && supervisorctl update
  tags: ['supervisor', 'backend']
  when: supervisor.changed

- name: vcms static files collected
  django_manage: command=collectstatic app_path=/vagrant/vcms settings=vcms.settings_{{ item.name }}
  tags: ['collectstatic', 'backend', 'django']
  with_items: "{{ vcms_apps }}"

- name: vcm uWSGI configuration copied
  template: src=etc/uwsgi-vcms.ini.j2 dest=/etc/uwsgi/apps-enabled/vcms_{{ item.name }}.ini
  with_items: "{{ vcms_apps }}"
  tags: ['uwsgi', 'backend']
  notify:
    - restart uwsgi

- name: vcm nginx configuration copied
  template: src=etc/nginx-vcms.conf.j2 dest=/etc/nginx/conf.d/vcms_{{ item.name }}.conf
  with_items: "{{ vcms_apps }}"
  tags: ['nginx']
  notify:
    - restart nginx


# La Jornada Videos Frontend
- name: Install lajornadavideos python requirements
  pip: requirements=/vagrant/vcms/lajornadavideos/requirements.txt state=latest
  tags: ['python', 'install', 'pip']

- name: Collect lajornadavideos static files
  django_manage: command=collectstatic app_path=/vagrant/vcms settings=lajornadavideos.settings
  tags: ['python', 'install', 'frontend', 'collectstatic']

- name: Copy uWSGI lajornadavideos applicaiton configuration file
  copy: src=etc/uwsgi-lajornadavideos.ini dest=/etc/uwsgi/apps-enabled/lajornadavideos.ini
  tags: ['uwsgi', 'install', 'frontend']
  notify:
    - restart uwsgi

- name: lajornadavideos nginx config updated
  template: src=etc/nginx-lajornadavideos.conf.j2 dest=/etc/nginx/conf.d/lajornadavideos.conf
  tags: ['nginx', 'frontend']
  notify:
    - restart nginx

- name: Ensure supervisor is running
  service: name=supervisor state=started
