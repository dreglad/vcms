---
- hosts: default
  vars:
    - vcms_apps:
      - lajornadavideos
      - ciencias
      - wikileaks

  tasks:
    - name: Set hostname
      hostname: name=vcm-dev
    - name: Update all packages to latest version
      apt: update_cache=yes upgrade=dist

    - name: Add PPA repository for FFmpeg and codec libraries
      apt_repository: repo='ppa:mc3man/trusty-media' update_cache=yes

    - name: Set MySQL root password in case of installing
      debconf: name='mysql-server' question='mysql-server/root_password' value='pass' vtype='password'

    - name: Confirm MySQL root password in case of installing
      debconf: name='mysql-server' question='mysql-server/root_password_again' value='pass' vtype='password'

    - name: Install required APT packages
      apt: pkg={{ item }}
      with_items:
        - python-virtualenv
        - python3-pip
        - python-memcache
        - redis-server
        - libjpeg-dev
        - git
        - solr-jetty
        - pysolr
        - python-dev
        - libyaml-dev
        - imagemagick
        - mysql-server
        - libmysqlclient-dev
        - ffmpeg
        - x264
        - fdkaac-encoder
        - python-mysqldb
        - uwsgi
        - uwsgi-plugin-python

    - name: Install you-get
      command: pip3 install you-get creates="/usr/local/bin/you-get"

    - name: NGINX | Adding NGINX signing key
      apt_key: url=http://nginx.org/keys/nginx_signing.key state=present

    - name: NGINX | Adding sources.list deb url for NGINX
      lineinfile: dest=/etc/apt/sources.list line="deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx"
      register: nginx_deburl

    - name: NGINX | Adding sources.list deb-src url for NGINX
      lineinfile: dest=/etc/apt/sources.list line="deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx"
      register: nginx_debsrcurl

    - name: NGINX | Updating apt cache
      apt: update_cache=yes
      when: nginx_deburl.changed or nginx_debsrcurl.changed

    - name: NGINX | Installing NGINX
      apt: pkg=nginx state=latest

    - name: Create storage directories
      file: path={{ item }} state=directory mode=0777 follow=True
      with_items:
        - /mnt/lajornadavideos_storage/media/hls
        - /mnt/lajornadavideos_storage/media/dash
        - /mnt/lajornadavideos_storage/media/original
        - /mnt/lajornadavideos_storage/media/images
        - /mnt/lajornadavideos_storage/media/sprites
        - /mnt/lajornadavideos_storage/media/videos
        - /mnt/lajornadavideos_storage/static/lajornadavideos
        - /mnt/lajornadavideos_storage/static/vcms
        - /mnt/lajornadavideos_storage/tmp/img
        - /mnt/lajornadavideos_storage/tmp/mp4
        - /mnt/lajornadavideos_storage/tmp/original
        - /mnt/lajornadavideos_storage/tmp/status
        - /var/log/vcms
        - /var/log/lajornadavideos

    - name: Copy  web server configuration file
      copy: src=etc/nginx.conf dest=/etc/nginx.conf
      notify:
        - restart nginx

    - name: Install vcms python requirements
      pip: requirements=/vagrant/vcms/vcms/requirements.txt state=latest

    - name: Create databases
      mysql_db: name={{ item }} login_user=root login_password=pass state=present
      register: database
      with_items: {{ vcms_apps }}

    - name: Migrate databases
      django_manage: command=migrate app_path=/vagrant/vcms settings=vcms.settings_{{ item }}
      with_items: {{ vcms_apps }}

#    - name: Load video fixtures data
#      django_manage: command=loaddata app_path=/vagrant/video_site fixtures='lajornada/users lajornada/tipo_clips lajornada/tipo_programas lajornada/categorias paises lajornada/programas lajornada/corresponsales lajornada/servicios'
#      when: database.changed

    - name: Collect vcms static files
      django_manage: command=collectstatic app_path=/vagrant/vcms settings=vcms.settings_{{ item }}
      with_items: {{ vcms_apps }}

    # - name: Add supervisor upstart script
    #   copy: src=etc/upstart-supervisor.conf dest=/etc/init/supervisor.conf
    #   notify:
    #     - reload upstart configuration

    - name: Copy uWSGI vcms applicaiton configuration file
      copy: src=etc/uwsgi-vcms_lajornadavideos.ini dest=/etc/uwsgi/apps-enabled/vcms_lajornadavideos.ini
      notify:
        - restart uwsgi

    - name: Copy vcms web server configuration file
      copy: src=etc/nginx-vcms_lajornadavideos.conf dest=/etc/nginx/conf.d/vcms_lajornadavideos.conf
      notify:
        - restart nginx


    - name: Install lajornadavideos python requirements
      pip: requirements=/vagrant/vcms/lajornadavideos/requirements.txt state=latest

    - name: Collect lajornadavideos static files
      django_manage: command=collectstatic app_path=/vagrant/vcms settings=lajornadavideos.settings


    - name: Copy uWSGI lajornadavideos applicaiton configuration file
      copy: src=etc/uwsgi-lajornadavideos.ini dest=/etc/uwsgi/apps-enabled/lajornadavideos.ini
      notify:
        - restart uwsgi


    - name: Copy web server lajornada site configuration file
      copy: src=etc/nginx-lajornadavideos.conf dest=/etc/nginx/conf.d/lajornadavideos.conf
      notify:
        - restart nginx

    - name: Ensure uWSGI is running
      service: name=uwsgi state=started

    - name: Ensure NGINX is running
      service: name=nginx state=started

    # - name: Ensure supervisor is running
    #   service: name=supervisor state=started


  handlers:
    - name: restart nginx
      service: name=nginx state=restarted

    - name: restart uwsgi
      service: name=uwsgi state=restarted

    - name: reload upstart configuration
      command: initctl reload-configuration
