# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-07-18 22:54
from __future__ import unicode_literals

import autoslug.fields
from django.conf import settings
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import jsonfield.fields
import model_utils.fields
import mptt.fields
import sorl.thumbnail.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locality', '0001_initial'),
        ('taggit', '0002_auto_20150616_2121'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Clasificador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='nombre')),
                ('nombre', models.CharField(blank=True, max_length=255, verbose_name='nombre')),
                ('descripcion', models.TextField(blank=True, verbose_name='descripci\xf3n')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='meta descripci\xf3n')),
                ('nombre_plural', models.CharField(blank=True, max_length=255)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
                ('usuario_creacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clasificadors_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('usuario_modificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clasificadors_modificados', to=settings.AUTH_USER_MODEL, verbose_name='modificado por')),
            ],
            options={
                'ordering': ['nombre'],
                'verbose_name': 'clasificador',
                'verbose_name_plural': 'clasificadores',
            },
        ),
        migrations.CreateModel(
            name='Filtro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('operador', model_utils.fields.StatusField(choices=[('exact', 'Es igual a'), ('not_exact', 'Es diferente a'), ('not_null', 'No est\xe1 vac\xedo'), ('null', 'Est\xe1 vac\xedo'), ('icontains', 'Contiene el texto'), ('lt', 'Es menor que'), ('lte', 'Es menor o igual que'), ('gt', 'Es mayor que'), ('gte', 'Es mayor o igual que')], default='exact', max_length=100, no_check_for_status=True, verbose_name='operador')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('url', models.URLField(db_index=True, verbose_name='URL')),
                ('titulo', models.CharField(blank=True, max_length=255, verbose_name='t\xedtulo')),
                ('blank', models.BooleanField(default=False, help_text='Abrir link en una nuevva ventana o pesta\xf1a', verbose_name='nuevo tab')),
                ('tipo', model_utils.fields.StatusField(choices=[('auto', 'Gen\xe9rico'), ('site', 'Sitio web'), ('post', 'Art\xedculo o post relacionado'), ('social', 'Cuenta o perfil de redes sociales'), ('mailto', 'Correo electr\xf3nico')], default='auto', max_length=100, no_check_for_status=True, verbose_name='tipo')),
                ('usuario_creacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='links_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('usuario_modificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='links_modificados', to=settings.AUTH_USER_MODEL, verbose_name='modificado por')),
            ],
            options={
                'verbose_name': 'link',
                'verbose_name_plural': 'links',
            },
        ),
        migrations.CreateModel(
            name='Lista',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('activo', models.BooleanField(db_index=True, default=True, verbose_name='activo')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='nombre')),
                ('nombre', models.CharField(blank=True, max_length=255, verbose_name='nombre')),
                ('descripcion', models.TextField(blank=True, verbose_name='descripci\xf3n')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='meta descripci\xf3n')),
                ('nombre_plural', models.CharField(blank=True, help_text='Opcional. Para hacer referencia al grupo de videos que pertenecen a esta lissta. \xdanicamente cuando el nombre sea pluralizable. Ej: Documenal -> Documentales, pero no Ciencia Ficci\xf3n -> Ciencias Ficciones)', max_length=255)),
                ('youtube_playlist', models.CharField(blank=True, max_length=128, verbose_name='playlist de YouTube')),
                ('imagen', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='series', verbose_name='imagen')),
                ('mostrar_imagen', models.BooleanField(default=False)),
                ('icono', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='icons', verbose_name='\xedcono')),
                ('mostrar_icono', models.BooleanField(default=False, verbose_name='mostrar \xedcono')),
                ('cortinilla_inicial', models.FileField(blank=True, null=True, upload_to='intros', verbose_name='cortinilla inicial')),
                ('mostrar_cortinilla_inicial', models.BooleanField(default=False, verbose_name='mostrar cortinilla inicial')),
                ('cortinilla_final', models.FileField(blank=True, null=True, upload_to='endings', verbose_name='cortinilla final')),
                ('mostrar_cortinilla_final', models.BooleanField(default=False, verbose_name='mostrar cortinilla final')),
                ('reproduccion', model_utils.fields.StatusField(choices=[('auto', 'Autom\xe1tico'), ('local', 'S\xf3lo desde el sitio web'), ('youtube', 'S\xf3lo desde YouTube')], default='auto', max_length=100, no_check_for_status=True, verbose_name='reproducci\xf3n')),
                ('clasificador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listas', to='videos.Clasificador')),
                ('links', models.ManyToManyField(blank=True, related_name='listas', to='videos.Link', verbose_name='link')),
                ('listas_relacionadas', models.ManyToManyField(blank=True, related_name='_lista_listas_relacionadas_+', to='videos.Lista', verbose_name='listas relacionadas')),
            ],
            options={
                'ordering': ['clasificador', 'nombre', '-fecha_creacion'],
                'verbose_name': 'lista',
                'verbose_name_plural': 'listas',
            },
        ),
        migrations.CreateModel(
            name='ListaEnPagina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('mostrar_nombre', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar nombre')),
                ('mostrar_maximo', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'Autom\xe1tico'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (12, '12'), (18, '18'), (24, '24'), (36, '36'), (48, '48')], default=0, null=True, verbose_name='mostrar m\xe1ximo')),
                ('mostrar_descripcion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar descripci\xf3n')),
                ('mostrar_paginacion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar paginac\xf3n')),
                ('texto_paginacion', models.CharField(blank=True, help_text='Ej: Mostrar m\xe1s', max_length=64, verbose_name='texto de paginaci\xf3n')),
                ('tema', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('default', 'Cuadros'), ('invertido', 'Cuadros invertido'), ('carrusel', 'Carrusel')], max_length=64, null=True, verbose_name='tema')),
                ('margen', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('0', 'Sin margen'), ('10', '10%'), ('20', '20%'), ('30', '30%')], default=None, max_length=64, verbose_name='margen')),
                ('layout', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('c100', '1'), ('c50', '2'), ('c33', '3'), ('c25', '4')], max_length=64, null=True, verbose_name='layout')),
                ('mostrar_publicidad', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar publicidad')),
                ('css', models.TextField(blank=True, verbose_name='CSS')),
                ('orden', models.PositiveIntegerField(db_index=True, verbose_name='orden')),
                ('nombre', models.CharField(blank=True, help_text='Opcional, si se deja vac\xedo se usar\xe1 el nombre de la lista', max_length=255, verbose_name='nombre')),
                ('descripcion', models.TextField(blank=True, verbose_name='descripci\xf3n')),
                ('lista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listas_en_pagina', to='videos.Lista', verbose_name='lista')),
            ],
            options={
                'ordering': ['orden'],
                'verbose_name': 'lista en p\xe1gina',
                'verbose_name_plural': 'liestas en p\xe1gina',
            },
        ),
        migrations.CreateModel(
            name='Pagina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mostrar_nombre', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar nombre')),
                ('mostrar_maximo', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'Autom\xe1tico'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (12, '12'), (18, '18'), (24, '24'), (36, '36'), (48, '48')], default=0, null=True, verbose_name='mostrar m\xe1ximo')),
                ('mostrar_descripcion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar descripci\xf3n')),
                ('mostrar_paginacion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar paginac\xf3n')),
                ('texto_paginacion', models.CharField(blank=True, help_text='Ej: Mostrar m\xe1s', max_length=64, verbose_name='texto de paginaci\xf3n')),
                ('tema', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('default', 'Cuadros'), ('invertido', 'Cuadros invertido'), ('carrusel', 'Carrusel')], max_length=64, null=True, verbose_name='tema')),
                ('margen', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('0', 'Sin margen'), ('10', '10%'), ('20', '20%'), ('30', '30%')], default=None, max_length=64, verbose_name='margen')),
                ('layout', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('c100', '1'), ('c50', '2'), ('c33', '3'), ('c25', '4')], max_length=64, null=True, verbose_name='layout')),
                ('mostrar_publicidad', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar publicidad')),
                ('css', models.TextField(blank=True, verbose_name='CSS')),
                ('orden', models.PositiveIntegerField(db_index=True, verbose_name='orden')),
                ('activo', models.BooleanField(db_index=True, default=True, verbose_name='activo')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='nombre')),
                ('nombre', models.CharField(blank=True, max_length=255, verbose_name='nombre')),
                ('descripcion', models.TextField(blank=True, verbose_name='descripci\xf3n')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='meta descripci\xf3n')),
                ('mostrar_en_menu', models.BooleanField(db_index=True, default=True, verbose_name='mostrar en men\xfa')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('listas', models.ManyToManyField(related_name='paginas', through='videos.ListaEnPagina', to='videos.Lista', verbose_name='listas')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='videos.Pagina', verbose_name='p\xe1gina padre')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
            ],
            options={
                'verbose_name': 'p\xe1gina',
                'verbose_name_plural': 'p\xe1ginas',
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Plataforma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('mostrar_nombre', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar nombre')),
                ('mostrar_maximo', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'Autom\xe1tico'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (12, '12'), (18, '18'), (24, '24'), (36, '36'), (48, '48')], default=0, null=True, verbose_name='mostrar m\xe1ximo')),
                ('mostrar_descripcion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar descripci\xf3n')),
                ('mostrar_paginacion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar paginac\xf3n')),
                ('texto_paginacion', models.CharField(blank=True, help_text='Ej: Mostrar m\xe1s', max_length=64, verbose_name='texto de paginaci\xf3n')),
                ('tema', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('default', 'Cuadros'), ('invertido', 'Cuadros invertido'), ('carrusel', 'Carrusel')], max_length=64, null=True, verbose_name='tema')),
                ('margen', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('0', 'Sin margen'), ('10', '10%'), ('20', '20%'), ('30', '30%')], default=None, max_length=64, verbose_name='margen')),
                ('layout', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('c100', '1'), ('c50', '2'), ('c33', '3'), ('c25', '4')], max_length=64, null=True, verbose_name='layout')),
                ('mostrar_publicidad', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar publicidad')),
                ('css', models.TextField(blank=True, verbose_name='CSS')),
                ('orden', models.PositiveIntegerField(db_index=True, verbose_name='orden')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='nombre')),
                ('nombre', models.CharField(blank=True, max_length=255, verbose_name='nombre')),
                ('descripcion', models.TextField(blank=True, verbose_name='descripci\xf3n')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='meta descripci\xf3n')),
                ('tipo', model_utils.fields.StatusField(choices=[('web', 'Sitio web'), ('movil', 'Aplicaci\xf3n m\xf3vil'), ('tv', 'Aplicaci\xf3n para TV'), ('youtube', 'Canal de YouTuve')], default='web', max_length=100, no_check_for_status=True, verbose_name='tipo')),
                ('api_key', models.CharField(blank=True, db_index=True, max_length=32)),
                ('link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plataformas', to='videos.Link', verbose_name='link')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
                ('usuario_creacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plataformas_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('usuario_modificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plataformas_modificados', to=settings.AUTH_USER_MODEL, verbose_name='modificado por')),
            ],
            options={
                'ordering': ['pk'],
                'verbose_name': 'plataforma',
                'verbose_name_plural': 'plataformas',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('mostrar_nombre', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar nombre')),
                ('mostrar_maximo', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'Autom\xe1tico'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (12, '12'), (18, '18'), (24, '24'), (36, '36'), (48, '48')], default=0, null=True, verbose_name='mostrar m\xe1ximo')),
                ('mostrar_descripcion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar descripci\xf3n')),
                ('mostrar_paginacion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar paginac\xf3n')),
                ('texto_paginacion', models.CharField(blank=True, help_text='Ej: Mostrar m\xe1s', max_length=64, verbose_name='texto de paginaci\xf3n')),
                ('tema', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('default', 'Cuadros'), ('invertido', 'Cuadros invertido'), ('carrusel', 'Carrusel')], max_length=64, null=True, verbose_name='tema')),
                ('margen', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('0', 'Sin margen'), ('10', '10%'), ('20', '20%'), ('30', '30%')], default=None, max_length=64, verbose_name='margen')),
                ('layout', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('c100', '1'), ('c50', '2'), ('c33', '3'), ('c25', '4')], max_length=64, null=True, verbose_name='layout')),
                ('mostrar_publicidad', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar publicidad')),
                ('css', models.TextField(blank=True, verbose_name='CSS')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='titulo')),
                ('titulo', models.CharField(blank=True, max_length=255, verbose_name='t\xedtulo')),
                ('descripcion', models.TextField(blank=True, verbose_name='descripci\xf3n')),
                ('custom_metadata', jsonfield.fields.JSONField(blank=True, null=True)),
                ('viejo_slug', models.CharField(blank=True, db_index=True, max_length=255)),
                ('estado', model_utils.fields.StatusField(choices=[('despublicado', 'Despublicado'), ('publicado', 'Publicado')], default='despublicado', max_length=100, no_check_for_status=True, verbose_name='estado')),
                ('procesamiento', model_utils.fields.StatusField(choices=[('nuevo', 'En cola'), ('procesando', 'Procesando'), ('listo', 'Listo'), ('error', 'Error')], default='nuevo', max_length=100, no_check_for_status=True, verbose_name='procesamiento')),
                ('reproduccion', model_utils.fields.StatusField(choices=[('auto', 'Autom\xe1tico'), ('local', 'S\xf3lo desde el sitio web'), ('youtube', 'S\xf3lo desde YouTube')], default='auto', max_length=100, no_check_for_status=True, verbose_name='reproducci\xf3n')),
                ('origen', model_utils.fields.StatusField(choices=[('local', 'Subir archivo de video'), ('externo', 'Importar video publicado en Internet')], default='local', max_length=100, no_check_for_status=True, verbose_name='origen')),
                ('origen_url', models.URLField(blank=True, help_text='Direcci\xf3n URL del video a copiar, puede ser un archivo para descarga directa (MP4, MOV, AVI, etc) o bien un a p\xe1gina desde donde sea posible extraer un video (YouTube, Dailymotion, TeleSUR, entre otros)', null=True, verbose_name='URL origen')),
                ('archivo_fuente', models.FileField(storage=django.core.files.storage.FileSystemStorage(location=b'/mnt/originales/lajornadavideos'), upload_to='videos', verbose_name='archivo fuente')),
                ('archivo_original', models.CharField(blank=True, max_length=255, verbose_name='original')),
                ('imagen_original', models.CharField(blank=True, max_length=255, verbose_name='imagen_original')),
                ('youtube_id', models.CharField(blank=True, editable=False, max_length=32, verbose_name='ID de Youtube')),
                ('archivo', models.FileField(blank=True, null=True, upload_to='videos', verbose_name='archivo')),
                ('imagen', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='images', verbose_name='imagen')),
                ('captions', models.FileField(blank=True, null=True, upload_to='captions', verbose_name='subt\xedtulos')),
                ('sprites', models.FileField(blank=True, editable=False, null=True, upload_to='sprites', verbose_name='sprites')),
                ('hls', models.FileField(blank=True, editable=False, null=True, upload_to='hls', verbose_name='HLS')),
                ('dash', models.FileField(blank=True, editable=False, null=True, upload_to='dash', verbose_name='DASH')),
                ('webm', models.FileField(blank=True, editable=False, null=True, upload_to='webm', verbose_name='WebM')),
                ('max_resolucion', models.IntegerField(blank=True, db_index=True, editable=False, null=True, verbose_name='resoluci\xf3n m\xe1xima')),
                ('duracion', models.DurationField(blank=True, null=True, verbose_name='duraci\xf3n')),
                ('width', models.PositiveIntegerField(blank=True, null=True, verbose_name='anchura')),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='altura')),
                ('resolucion', models.IntegerField(blank=True, db_index=True, editable=False, null=True, verbose_name='resoluci\xf3n')),
                ('original_metadata', jsonfield.fields.JSONField(blank=True, null=True)),
                ('fps', models.FloatField(blank=True, default=0, editable=False, null=True, verbose_name='FPS')),
                ('fecha', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='fecha')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='transcripci\xf3n')),
                ('observaciones', models.TextField(blank=True, verbose_name='observaciones')),
                ('ciudad', models.CharField(blank=True, max_length=128, null=True, verbose_name='ciudad')),
                ('fecha_publicacion', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='estado', verbose_name='fecha de publicaci\xf3n', when=set(['publicado']))),
                ('links', models.ManyToManyField(blank=True, related_name='videos', to='videos.Link', verbose_name='links')),
                ('listas', models.ManyToManyField(blank=True, related_name='videos', to='videos.Lista', verbose_name='listas')),
                ('pais', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locality.Country', verbose_name='pa\xeds')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
                ('territorio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locality.Territory', verbose_name='territorio')),
                ('usuario_creacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videos_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('usuario_modificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videos_modificados', to=settings.AUTH_USER_MODEL, verbose_name='modificado por')),
            ],
            options={
                'ordering': ('-fecha', '-fecha_creacion', '-pk'),
                'verbose_name': 'video',
                'verbose_name_plural': 'videos',
            },
        ),
        migrations.CreateModel(
            name='VideoEnPagina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('mostrar_nombre', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar nombre')),
                ('mostrar_maximo', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'Autom\xe1tico'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (12, '12'), (18, '18'), (24, '24'), (36, '36'), (48, '48')], default=0, null=True, verbose_name='mostrar m\xe1ximo')),
                ('mostrar_descripcion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar descripci\xf3n')),
                ('mostrar_paginacion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar paginac\xf3n')),
                ('texto_paginacion', models.CharField(blank=True, help_text='Ej: Mostrar m\xe1s', max_length=64, verbose_name='texto de paginaci\xf3n')),
                ('tema', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('default', 'Cuadros'), ('invertido', 'Cuadros invertido'), ('carrusel', 'Carrusel')], max_length=64, null=True, verbose_name='tema')),
                ('margen', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('0', 'Sin margen'), ('10', '10%'), ('20', '20%'), ('30', '30%')], default=None, max_length=64, verbose_name='margen')),
                ('layout', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), ('c100', '1'), ('c50', '2'), ('c33', '3'), ('c25', '4')], max_length=64, null=True, verbose_name='layout')),
                ('mostrar_publicidad', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar publicidad')),
                ('css', models.TextField(blank=True, verbose_name='CSS')),
                ('orden', models.PositiveIntegerField(db_index=True, verbose_name='orden')),
                ('pagina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos_en_pagina', to='videos.Pagina', verbose_name='p\xe1gina')),
                ('usuario_creacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videoenpaginas_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('usuario_modificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videoenpaginas_modificados', to=settings.AUTH_USER_MODEL, verbose_name='modificado por')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos_en_pagina', to='videos.Video', verbose_name='video')),
            ],
            options={
                'ordering': ['orden'],
                'verbose_name': 'vdeo en p\xe1gina',
                'verbose_name_plural': 'videos en p\xe1gina',
            },
        ),
        migrations.AddField(
            model_name='pagina',
            name='videos',
            field=models.ManyToManyField(related_name='paginas', through='videos.VideoEnPagina', to='videos.Video', verbose_name='videos destacados'),
        ),
        migrations.AddField(
            model_name='listaenpagina',
            name='pagina',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listas_en_pagina', to='videos.Pagina', verbose_name='p\xe1gina'),
        ),
        migrations.AddField(
            model_name='listaenpagina',
            name='usuario_creacion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listaenpaginas_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por'),
        ),
        migrations.AddField(
            model_name='listaenpagina',
            name='usuario_modificacion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listaenpaginas_modificados', to=settings.AUTH_USER_MODEL, verbose_name='modificado por'),
        ),
        migrations.AddField(
            model_name='lista',
            name='pagina',
            field=models.OneToOneField(blank=True, help_text='S\xf3lo si existe una p\xe1gina dedicada a esta lista', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lista_principal', to='videos.Pagina', verbose_name='p\xe1gina'),
        ),
        migrations.AddField(
            model_name='lista',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='lista',
            name='usuario_creacion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listas_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por'),
        ),
        migrations.AddField(
            model_name='lista',
            name='usuario_modificacion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listas_modificados', to=settings.AUTH_USER_MODEL, verbose_name='modificado por'),
        ),
        migrations.AddField(
            model_name='filtro',
            name='pagina',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Pagina', verbose_name='pagina'),
        ),
        migrations.AlterUniqueTogether(
            name='videoenpagina',
            unique_together=set([('video', 'pagina')]),
        ),
        migrations.AlterUniqueTogether(
            name='listaenpagina',
            unique_together=set([('lista', 'pagina')]),
        ),
    ]
