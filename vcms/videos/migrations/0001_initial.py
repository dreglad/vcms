# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-16 23:58
from __future__ import unicode_literals

import autoslug.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import jsonfield.fields
import model_utils.fields
import mptt.fields
import sorl.thumbnail.fields
import taggit.managers
import videos.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locality', '0001_initial'),
        ('taggit', '0002_auto_20150616_2121'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Clasificador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'nombre')),
                ('nombre', models.CharField(blank=True, max_length=255)),
                ('descripcion', models.TextField(blank=True, verbose_name='descripci\xf3n')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='meta descripci\xf3n')),
                ('nombre_plural', models.CharField(blank=True, max_length=255)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='Palabras o frases clave separadas por comas', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
                ('usuario_creacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clasificadors_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('usuario_modificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clasificadors_modificados', to=settings.AUTH_USER_MODEL, verbose_name='\xfaltima modificaci\xf3n por')),
            ],
            options={
                'ordering': ['nombre'],
                'verbose_name_plural': 'clasificadores',
            },
        ),
        migrations.CreateModel(
            name='Filtro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('operador', model_utils.fields.StatusField(choices=[(b'exact', 'Es igual a'), (b'not_exact', 'Es diferente a'), (b'not_null', 'No est\xe1 vac\xedo'), (b'null', 'Est\xe1 vac\xedo'), (b'icontains', 'Contiene el texto'), (b'lt', 'Es menor que'), (b'lte', 'Es menor o igual que'), (b'gt', 'Es mayor que'), (b'gte', 'Es mayor o igual que')], default=b'exact', max_length=100, no_check_for_status=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('url', models.URLField(db_index=True, verbose_name='URL')),
                ('titulo', models.CharField(blank=True, max_length=255, verbose_name='t\xedtulo')),
                ('blank', models.BooleanField(default=False, help_text='Abrir en una nuevva ventana/tab', verbose_name='nuevo tab')),
                ('tipo', model_utils.fields.StatusField(choices=[(b'auto', 'Gen\xe9rico'), (b'site', 'Home de sitio web'), (b'post', 'Art\xedculo o post con contenido relacionado'), (b'social', 'Cuenta o perfil de redes sociales'), (b'mailto', 'Cuenta de correo electr\xf3nico')], default=b'auto', max_length=100, no_check_for_status=True)),
                ('usuario_creacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='links_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('usuario_modificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='links_modificados', to=settings.AUTH_USER_MODEL, verbose_name='\xfaltima modificaci\xf3n por')),
            ],
            options={
                'ordering': ['-fecha_creacion', '-pk'],
                'abstract': False,
                'get_latest_by': 'fecha_creacion',
            },
        ),
        migrations.CreateModel(
            name='Lista',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('activo', models.BooleanField(db_index=True, default=True)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'nombre')),
                ('nombre', models.CharField(blank=True, max_length=255)),
                ('descripcion', models.TextField(blank=True, verbose_name='descripci\xf3n')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='meta descripci\xf3n')),
                ('nombre_plural', models.CharField(blank=True, max_length=255)),
                ('youtube_playlist', models.CharField(blank=True, max_length=128)),
                ('imagen', sorl.thumbnail.fields.ImageField(blank=True, null=True, storage=videos.models.OverwriteStorage(), upload_to=b'series')),
                ('mostrar_imagen', models.BooleanField(default=False)),
                ('icono', sorl.thumbnail.fields.ImageField(blank=True, null=True, storage=videos.models.OverwriteStorage(), upload_to=b'icons', verbose_name='\xedcono')),
                ('mostrar_icono', models.BooleanField(default=False)),
                ('cortinilla_inicio', models.FileField(blank=True, help_text='Video introductorio o cortinilla de inicio', null=True, upload_to=b'intros')),
                ('mostrar_cortinilla_inicio', models.BooleanField(default=False, help_text='Video con cortinilla de inicio')),
                ('cortinilla_final', models.FileField(blank=True, help_text='video con cortinilla de cierre', null=True, upload_to=b'endings')),
                ('mostrar_cortinilla_final', models.BooleanField(default=False, help_text='Agrgear cortinilla final a los videos de este autor')),
                ('reproduccion', model_utils.fields.StatusField(choices=[(b'auto', 'Autom\xe1tico'), (b'local', 'S\xf3lo desde el sitio web'), (b'youtube', 'S\xf3lo desde YouTube')], default=b'auto', max_length=100, no_check_for_status=True, verbose_name='reproducci\xf3n')),
                ('clasificador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listas', to='videos.Clasificador')),
                ('links', models.ManyToManyField(blank=True, related_name='listas', to='videos.Link')),
                ('listas_relacionadas', models.ManyToManyField(blank=True, related_name='_lista_listas_relacionadas_+', to='videos.Lista')),
            ],
            options={
                'ordering': ['clasificador', 'nombre', '-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='ListaEnPagina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('mostrar_nombre', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')])),
                ('mostrar_maximo', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'Autom\xe1tico'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (12, '12'), (18, '18'), (24, '24'), (36, '36'), (48, '48')], default=0, null=True, verbose_name='mostrar m\xe1ximo')),
                ('mostrar_descripcion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar descripci\xf3n')),
                ('mostrar_paginacion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar paginac\xf3n')),
                ('texto_paginacion', models.CharField(blank=True, help_text='Default: "mostrar m\xe1s"', max_length=64, verbose_name='texto de paginaci\xf3n')),
                ('tema', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), (b'default', 'Cuadros'), (b'invertido', 'Cuadros invertidos'), (b'carrusel', 'Carrusel')], max_length=64, null=True)),
                ('margen', models.CharField(blank=True, choices=[(b'', 'Autom\xe1tico'), (b'0', 'Sin margen'), (b'1px', '1 pixel'), (b'0.5rem', '1/2 rem'), (b'1rem', '1 rem'), (b'2rem', '2 rem'), (b'5%', '5%'), (b'10%', '10%'), (b'30%', '30%'), (b'50%', '50%')], default=b'', max_length=64)),
                ('layout', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), (b'c100', '1 columna'), (b'c50', '2 columnas'), (b'c33', '3 columnas'), (b'c25', '4 columnas')], max_length=64, null=True)),
                ('mostrar_publicidad', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar publicidad')),
                ('css', models.TextField(blank=True, verbose_name='CSS')),
                ('orden', models.PositiveIntegerField(db_index=True)),
                ('nombre', models.CharField(blank=True, help_text='Opcional, si se deja vac\xedo se usar\xe1 el nombre de la lista', max_length=255)),
                ('descripcion', models.TextField(blank=True, verbose_name='descripci\xf3n')),
                ('lista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listas_en_pagina', to='videos.Lista')),
            ],
            options={
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='Pagina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mostrar_nombre', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')])),
                ('mostrar_maximo', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'Autom\xe1tico'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (12, '12'), (18, '18'), (24, '24'), (36, '36'), (48, '48')], default=0, null=True, verbose_name='mostrar m\xe1ximo')),
                ('mostrar_descripcion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar descripci\xf3n')),
                ('mostrar_paginacion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar paginac\xf3n')),
                ('texto_paginacion', models.CharField(blank=True, help_text='Default: "mostrar m\xe1s"', max_length=64, verbose_name='texto de paginaci\xf3n')),
                ('tema', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), (b'default', 'Cuadros'), (b'invertido', 'Cuadros invertidos'), (b'carrusel', 'Carrusel')], max_length=64, null=True)),
                ('margen', models.CharField(blank=True, choices=[(b'', 'Autom\xe1tico'), (b'0', 'Sin margen'), (b'1px', '1 pixel'), (b'0.5rem', '1/2 rem'), (b'1rem', '1 rem'), (b'2rem', '2 rem'), (b'5%', '5%'), (b'10%', '10%'), (b'30%', '30%'), (b'50%', '50%')], default=b'', max_length=64)),
                ('layout', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), (b'c100', '1 columna'), (b'c50', '2 columnas'), (b'c33', '3 columnas'), (b'c25', '4 columnas')], max_length=64, null=True)),
                ('mostrar_publicidad', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar publicidad')),
                ('css', models.TextField(blank=True, verbose_name='CSS')),
                ('orden', models.PositiveIntegerField(db_index=True)),
                ('activo', models.BooleanField(db_index=True, default=True)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'nombre')),
                ('nombre', models.CharField(blank=True, max_length=255)),
                ('descripcion', models.TextField(blank=True, verbose_name='descripci\xf3n')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='meta descripci\xf3n')),
                ('mostrar_en_menu', models.BooleanField(db_index=True, default=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('listas', models.ManyToManyField(related_name='paginas', through='videos.ListaEnPagina', to='videos.Lista')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='videos.Pagina', verbose_name='padre')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='Palabras o frases clave separadas por comas', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
            ],
            options={
                'verbose_name': 'p\xe1gina',
                'verbose_name_plural': 'p\xe1ginas',
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Plataforma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('mostrar_nombre', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')])),
                ('mostrar_maximo', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'Autom\xe1tico'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (12, '12'), (18, '18'), (24, '24'), (36, '36'), (48, '48')], default=0, null=True, verbose_name='mostrar m\xe1ximo')),
                ('mostrar_descripcion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar descripci\xf3n')),
                ('mostrar_paginacion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar paginac\xf3n')),
                ('texto_paginacion', models.CharField(blank=True, help_text='Default: "mostrar m\xe1s"', max_length=64, verbose_name='texto de paginaci\xf3n')),
                ('tema', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), (b'default', 'Cuadros'), (b'invertido', 'Cuadros invertidos'), (b'carrusel', 'Carrusel')], max_length=64, null=True)),
                ('margen', models.CharField(blank=True, choices=[(b'', 'Autom\xe1tico'), (b'0', 'Sin margen'), (b'1px', '1 pixel'), (b'0.5rem', '1/2 rem'), (b'1rem', '1 rem'), (b'2rem', '2 rem'), (b'5%', '5%'), (b'10%', '10%'), (b'30%', '30%'), (b'50%', '50%')], default=b'', max_length=64)),
                ('layout', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), (b'c100', '1 columna'), (b'c50', '2 columnas'), (b'c33', '3 columnas'), (b'c25', '4 columnas')], max_length=64, null=True)),
                ('mostrar_publicidad', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar publicidad')),
                ('css', models.TextField(blank=True, verbose_name='CSS')),
                ('orden', models.PositiveIntegerField(db_index=True)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'nombre')),
                ('nombre', models.CharField(blank=True, max_length=255)),
                ('descripcion', models.TextField(blank=True, verbose_name='descripci\xf3n')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='meta descripci\xf3n')),
                ('tipo', model_utils.fields.StatusField(choices=[(b'web', 'Sitio web'), (b'movil', 'Aplicaci\xf3n m\xf3vil'), (b'tv', 'Aplicaci\xf3n para TV'), (b'youtube', 'Canal de YouTuve')], default=b'web', max_length=100, no_check_for_status=True)),
                ('api_key', models.CharField(blank=True, db_index=True, max_length=32)),
                ('link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plataformas', to='videos.Link')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='Palabras o frases clave separadas por comas', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
                ('usuario_creacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plataformas_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('usuario_modificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plataformas_modificados', to=settings.AUTH_USER_MODEL, verbose_name='\xfaltima modificaci\xf3n por')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('mostrar_nombre', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')])),
                ('mostrar_maximo', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'Autom\xe1tico'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (12, '12'), (18, '18'), (24, '24'), (36, '36'), (48, '48')], default=0, null=True, verbose_name='mostrar m\xe1ximo')),
                ('mostrar_descripcion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar descripci\xf3n')),
                ('mostrar_paginacion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar paginac\xf3n')),
                ('texto_paginacion', models.CharField(blank=True, help_text='Default: "mostrar m\xe1s"', max_length=64, verbose_name='texto de paginaci\xf3n')),
                ('tema', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), (b'default', 'Cuadros'), (b'invertido', 'Cuadros invertidos'), (b'carrusel', 'Carrusel')], max_length=64, null=True)),
                ('margen', models.CharField(blank=True, choices=[(b'', 'Autom\xe1tico'), (b'0', 'Sin margen'), (b'1px', '1 pixel'), (b'0.5rem', '1/2 rem'), (b'1rem', '1 rem'), (b'2rem', '2 rem'), (b'5%', '5%'), (b'10%', '10%'), (b'30%', '30%'), (b'50%', '50%')], default=b'', max_length=64)),
                ('layout', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), (b'c100', '1 columna'), (b'c50', '2 columnas'), (b'c33', '3 columnas'), (b'c25', '4 columnas')], max_length=64, null=True)),
                ('mostrar_publicidad', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar publicidad')),
                ('css', models.TextField(blank=True, verbose_name='CSS')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'titulo')),
                ('titulo', models.CharField(blank=True, max_length=255)),
                ('descripcion', models.TextField(blank=True, verbose_name='descripci\xf3n')),
                ('estado', model_utils.fields.StatusField(choices=[(b'despublicado', 'Despublicado'), (b'publicado', 'Publicado')], default=b'despublicado', max_length=100, no_check_for_status=True)),
                ('procesamiento', model_utils.fields.StatusField(choices=[(b'nuevo', 'En cola'), (b'procesando', 'Procesando'), (b'listo', 'Listo'), (b'error', 'Error')], default=b'nuevo', max_length=100, no_check_for_status=True)),
                ('reproduccion', model_utils.fields.StatusField(choices=[(b'auto', 'Autom\xe1tico'), (b'local', 'S\xf3lo desde el sitio web'), (b'youtube', 'S\xf3lo desde YouTube')], default=b'auto', max_length=100, no_check_for_status=True, verbose_name='reproducci\xf3n')),
                ('origen', model_utils.fields.StatusField(choices=[(b'local', 'Subir archivo de video'), (b'externo', 'Importar video desde un sitio web')], default=b'local', max_length=100, no_check_for_status=True)),
                ('origen_url', models.URLField(blank=True, help_text='Direcci\xf3n URL del video a copiar, puede ser un archivo para descarga directa (MP4, MOV, AVI, etc) o bien un a p\xe1gina desde donde sea posible extraer un video (YouTube, Dailymotion, TeleSUR, entre otros)', null=True, verbose_name='URL origen')),
                ('archivo_original', models.CharField(blank=True, max_length=255, verbose_name='archivo')),
                ('imagen_original', models.CharField(blank=True, max_length=255)),
                ('youtube_id', models.CharField(blank=True, editable=False, max_length=32, verbose_name='ID de Youtube')),
                ('archivo', models.FileField(blank=True, null=True, storage=videos.models.OverwriteStorage(), upload_to=b'videos')),
                ('imagen', sorl.thumbnail.fields.ImageField(blank=True, null=True, storage=videos.models.OverwriteStorage(), upload_to=b'images')),
                ('hls', models.FileField(blank=True, null=True, storage=videos.models.OverwriteStorage(), upload_to=b'hls', verbose_name='HLS')),
                ('resolucion', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='resoluci\xf3n')),
                ('max_resolucion', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='resoluci\xf3n m\xe1xima')),
                ('dash', models.FileField(blank=True, null=True, storage=videos.models.OverwriteStorage(), upload_to=b'dash', verbose_name='DASH')),
                ('sprites', models.FileField(blank=True, null=True, storage=videos.models.OverwriteStorage(), upload_to=b'sprites')),
                ('captions', models.FileField(blank=True, null=True, storage=videos.models.OverwriteStorage(), upload_to=b'captions')),
                ('duracion', models.DurationField(default=datetime.timedelta(0), verbose_name='duraci\xf3n')),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('original_metadata', jsonfield.fields.JSONField(blank=True, null=True)),
                ('custom_metadata', jsonfield.fields.JSONField(blank=True, null=True)),
                ('viejo_slug', models.CharField(blank=True, db_index=True, max_length=255)),
                ('fps', models.FloatField(blank=True, default=0, editable=False, null=True)),
                ('fecha', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('resumen', models.TextField(blank=True)),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='transcripci\xf3n')),
                ('observaciones', models.TextField(blank=True)),
                ('ciudad', models.CharField(blank=True, max_length=128, null=True)),
                ('fecha_publicacion', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor=b'estado', verbose_name='fecha de publicaci\xf3n', when=set([b'publicado']))),
                ('links', models.ManyToManyField(blank=True, related_name='videos', to='videos.Link')),
                ('listas', models.ManyToManyField(blank=True, related_name='videos', to='videos.Lista')),
                ('pais', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locality.Country', verbose_name='pa\xeds')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='Palabras o frases clave separadas por coma', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
                ('territorio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locality.Territory', verbose_name='territorio')),
                ('usuario_creacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videos_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('usuario_modificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videos_modificados', to=settings.AUTH_USER_MODEL, verbose_name='\xfaltima modificaci\xf3n por')),
            ],
            options={
                'ordering': ('-fecha', '-fecha_creacion', '-pk'),
            },
        ),
        migrations.CreateModel(
            name='VideoEnPagina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='fecha de creaci\xf3n')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True, verbose_name='\xfaltima modificaci\xf3n')),
                ('mostrar_nombre', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')])),
                ('mostrar_maximo', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'Autom\xe1tico'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (12, '12'), (18, '18'), (24, '24'), (36, '36'), (48, '48')], default=0, null=True, verbose_name='mostrar m\xe1ximo')),
                ('mostrar_descripcion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar descripci\xf3n')),
                ('mostrar_paginacion', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar paginac\xf3n')),
                ('texto_paginacion', models.CharField(blank=True, help_text='Default: "mostrar m\xe1s"', max_length=64, verbose_name='texto de paginaci\xf3n')),
                ('tema', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), (b'default', 'Cuadros'), (b'invertido', 'Cuadros invertidos'), (b'carrusel', 'Carrusel')], max_length=64, null=True)),
                ('margen', models.CharField(blank=True, choices=[(b'', 'Autom\xe1tico'), (b'0', 'Sin margen'), (b'1px', '1 pixel'), (b'0.5rem', '1/2 rem'), (b'1rem', '1 rem'), (b'2rem', '2 rem'), (b'5%', '5%'), (b'10%', '10%'), (b'30%', '30%'), (b'50%', '50%')], default=b'', max_length=64)),
                ('layout', models.CharField(blank=True, choices=[(None, 'Autom\xe1tico'), (b'c100', '1 columna'), (b'c50', '2 columnas'), (b'c33', '3 columnas'), (b'c25', '4 columnas')], max_length=64, null=True)),
                ('mostrar_publicidad', models.NullBooleanField(choices=[(None, 'Autom\xe1tico'), (True, 'S\xed'), (False, 'No')], verbose_name='mostrar publicidad')),
                ('css', models.TextField(blank=True, verbose_name='CSS')),
                ('orden', models.PositiveIntegerField(db_index=True)),
                ('pagina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos_en_pagina', to='videos.Pagina', verbose_name='p\xe1gina')),
                ('usuario_creacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videoenpaginas_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('usuario_modificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videoenpaginas_modificados', to=settings.AUTH_USER_MODEL, verbose_name='\xfaltima modificaci\xf3n por')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos_en_pagina', to='videos.Video')),
            ],
            options={
                'ordering': ['orden'],
                'verbose_name': 'vdeo en p\xe1gina',
                'verbose_name_plural': 'videos en p\xe1gina',
            },
        ),
        migrations.AddField(
            model_name='pagina',
            name='videos',
            field=models.ManyToManyField(related_name='paginas', through='videos.VideoEnPagina', to='videos.Video', verbose_name=b'videos destacados'),
        ),
        migrations.AddField(
            model_name='listaenpagina',
            name='pagina',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listas_en_pagina', to='videos.Pagina'),
        ),
        migrations.AddField(
            model_name='listaenpagina',
            name='usuario_creacion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listaenpaginas_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por'),
        ),
        migrations.AddField(
            model_name='listaenpagina',
            name='usuario_modificacion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listaenpaginas_modificados', to=settings.AUTH_USER_MODEL, verbose_name='\xfaltima modificaci\xf3n por'),
        ),
        migrations.AddField(
            model_name='lista',
            name='pagina',
            field=models.OneToOneField(blank=True, help_text='P\xe1gina dedicada a mostrar contenido sobre esta lista', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lista_principal', to='videos.Pagina'),
        ),
        migrations.AddField(
            model_name='lista',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='Palabras o frases clave separadas por comas', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='lista',
            name='usuario_creacion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listas_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por'),
        ),
        migrations.AddField(
            model_name='lista',
            name='usuario_modificacion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listas_modificados', to=settings.AUTH_USER_MODEL, verbose_name='\xfaltima modificaci\xf3n por'),
        ),
        migrations.AddField(
            model_name='filtro',
            name='pagina',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Pagina'),
        ),
        migrations.AlterUniqueTogether(
            name='videoenpagina',
            unique_together=set([('video', 'pagina')]),
        ),
        migrations.AlterUniqueTogether(
            name='listaenpagina',
            unique_together=set([('lista', 'pagina')]),
        ),
    ]
